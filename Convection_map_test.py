#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Mar 16 17:24:59 2021

@author: elliott
"""

import pydatadarn
import json
import os

import numpy as np

#acces spherically fitted data generated by get_convection_data.py
path = "/home/elliott/Documents/python_analysis/Convection mapping/data/"
all_files = sorted(os.listdir(path))
num_files = len(all_files)

HMB_latmins = np.empty(num_files)
HMB_latmins[:] = np.nan
plasma_latmins = np.empty(num_files)
plasma_latmins[:]

count = 0
for fname in all_files:
	if count <0:
		count += 1
		continue
	else:
		print(fname)
		date = fname[0:15]
		with open(path+fname) as json_file:
			data = json.load(json_file)
		
			plasma_mcolats = np.array(data["plasma_mcolats"])
			plasma_mlats = 90-plasma_mcolats
			plasma_mlons = np.array(data["plasma_mlons"])
			plasma_az = np.array(data["plasma_az"])
			plasma_vels = np.array(data["plasma_vels"])
			time_i = data["time"]
			uao_neutral_az = np.array(data["uao_neutral_kvec"])
			uao_neutral_vel = np.array([data["uao_neutral_vel"]])
			boundary_mlats = np.array(data["hmb_mlats"])
			boundary_mlons = np.array(data["hmb_mlons"])
			los_vs = np.array(data["los_vs"])
			los_mcolats = np.array(data["los_mcolats"])
			los_mlons = np.array(data["los_mlons"])
			los_kvecs = np.array(data["los_kvecs"])
			
		
			HMB_latmins[count] = min(boundary_mlats)
			plasma_latmins[count] = min(90-plasma_mlats)
# 		
# 			dr, dtheta = pydatadarn.vector_plot(los_mcolats, los_mlons, los_kvecs, los_vs, time=time_i, 
# 									station_names=["bks"], FPI_names=["uao"], 
# 									FPI_kvecs=uao_neutral_az, FPI_vels=uao_neutral_vel, 
# 									boundary_mlats=boundary_mlats, boundary_mlons=boundary_mlons, save="pictures/L",
# 									mlt=False, cart=True,)
# 		
# 			dr, dtheta = pydatadarn.vector_plot(plasma_mcolats, plasma_mlons, plasma_az, plasma_vels, time=time_i, 
# 											station_names=["bks"], FPI_names=["uao"], 
# 											FPI_kvecs=uao_neutral_az, FPI_vels=uao_neutral_vel, 
# 											boundary_mlats=boundary_mlats, boundary_mlons=boundary_mlons, save="pictures/C",
# 											mlt=False, cart=True)
# 				
# 			dr, dtheta = pydatadarn.vector_plot(plasma_mcolats, plasma_mlons, plasma_az, plasma_vels, time=time_i, 
# 											station_names=["bks"], FPI_names=["uao"], 
# 											FPI_kvecs=uao_neutral_az, FPI_vels=uao_neutral_vel, 
# 											boundary_mlats=boundary_mlats, boundary_mlons=boundary_mlons, 
# 											mlt=False, cart=True, set_extent=True, save="pictures/CZ",
# 											colat_range=[60, 0], lon_range=[-125, -65])
			
			dr, dtheta = pydatadarn.vector_plot(los_mcolats, los_mlons, los_kvecs, los_vs, time=time_i, 
									station_names=["bks"], FPI_names=["uao"], 
									FPI_kvecs=uao_neutral_az, FPI_vels=uao_neutral_vel, 
									boundary_mlats=boundary_mlats, boundary_mlons=boundary_mlons, save="pictures/LZ",
									mlt=False, cart=True, set_extent=True, colat_range=[60, 0], lon_range=[-125, -65])
			
			count += 1